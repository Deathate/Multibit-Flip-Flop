{
  "liveServer.settings.port": 5506,
  "cmake.configureOnOpen": false,
  "multiCommand.commands": [
    {
      "command": "sanity check current.txt",
      "sequence": [
        {
          "command": "workbench.action.terminal.sendSequence",
          "args": {
            "text": "python main.py; tools/preliminary/preliminary-evaluator cases/current.txt output/output.txt\u000D"
          }
        }
      ]
    },
    {
      "command": "conan install",
      "sequence": [
        {
          "command": "workbench.action.files.save"
        },
        {
          "command": "workbench.action.terminal.sendSequence",
          "args": {
            "text": "conan install . --output-folder=build --build=missing\u000D"
          }
        }
      ]
    },
    {
      "command": "maturin develop",
      "sequence": [
        {
          "command": "workbench.action.terminal.sendSequence",
          "args": {
            "text": "maturin develop --release --manifest-path  ${fileDirname}/../Cargo.toml\u000D"
          }
        }
      ]
    },
    {
      "command": "carge run",
      "sequence": [
        {
          "command": "workbench.action.terminal.sendSequence",
          "args": {
            "text": "cargo run --release --manifest-path  ${fileDirname}/../Cargo.toml\u000D"
          }
        }
      ]
    },
    {
      "command": "carge build",
      "sequence": [
        {
          "command": "workbench.action.terminal.sendSequence",
          "args": {
            "text": "cargo build --release --manifest-path  ${fileDirname}/../Cargo.toml\u000D"
          }
        }
      ]
    },
    {
      "command": "sanity check sample.txt",
      "sequence": [
        // {
        //   "command": "workbench.action.terminal.sendSequence",
        //   "args": {
        //     "text": "tools/sanity/sanity_20240801-evaluator cases/sample.txt output/output.txt\u000D"
        //   }
        // },
        {
          "command": "workbench.action.terminal.sendSequence",
          "args": {
            "text": "tools/preliminary/preliminary-evaluator cases/sample.txt output/output.txt\u000D"
          }
        }
      ]
    },
    {
      "command": "cpp_make",
      "sequence": [
        {
          "command": "workbench.action.files.save"
        },
        {
          "command": "workbench.action.terminal.sendSequence",
          "args": {
            // conan install . --output-folder=build --build=missing
            // cmake -S . -B build -DEXECUTE=False; cmake --build build;
            "text": "clear;cmake -S . -B build -DEXECUTE=True; cmake --build build; build/a.out\u000D"
          }
        }
      ]
    },
    {
      "command": "cpp_build",
      "sequence": [
        {
          "command": "workbench.action.files.save"
        },
        {
          "command": "workbench.action.terminal.sendSequence",
          "args": {
            // conan install . --output-folder=build --build=missing
            // cmake -S . -B build -DEXECUTE=False; cmake --build build;
            "text": "clear;cmake -S . -B build -DEXECUTE=False; cmake --build build;\u000D"
          }
        }
      ]
    },
    {
      "command": "previous_command",
      "sequence": [
        {
          "command": "workbench.action.terminal.clear"
        },
        {
          "command": "workbench.action.terminal.sendSequence",
          "args": {
            "text": "!!\u000D"
          }
        }
      ]
    },
    {
      "command": "cpp run",
      "sequence": [
        {
          "command": "workbench.action.terminal.sendSequence",
          "args": {
            "text": "clear;$HOME/GCC-15/bin/g++ -std=c++26 main.cpp -static-libstdc++ -I$CONDA_PREFIX/include -L$CONDA_PREFIX/lib && ./a.out\u000D"
            // "text": "clear;$HOME/GCC-15/bin/g++ -std=c++26 main.cpp -static-libstdc++ -Lhello_world/target/release -L /home/deathate/.conan2/p/b/fmtfdf9615049683/p/lib -I/home/deathate/.conan2/p/b/fmtfdf9615049683/p/include -lrustlib -lfmt -Wl,-rpath,hello_world/target/release -I$CONDA_PREFIX/include -L$CONDA_PREFIX/lib && ./a.out\u000D"
            // "text": "clear;$HOME/GCC-15/bin/g++ -std=c++26 main.cpp -static-libstdc++  && ./a.out\u000D"
          }
        }
      ]
    },
    {
      "command": "cpp run 23",
      "sequence": [
        {
          "command": "workbench.action.terminal.sendSequence",
          "args": {
            "text": "clear;g++ -std=c++23 main.cpp -static-libstdc++ -I$CONDA_PREFIX/include -L$CONDA_PREFIX/lib -Lvaria/build/src -Ivaria/include -Ijson/include && ./a.out\u000D"
            // "text": "clear;$HOME/GCC-15/bin/g++ -std=c++26 main.cpp -static-libstdc++ -Lhello_world/target/release -L /home/deathate/.conan2/p/b/fmtfdf9615049683/p/lib -I/home/deathate/.conan2/p/b/fmtfdf9615049683/p/include -lrustlib -lfmt -Wl,-rpath,hello_world/target/release -I$CONDA_PREFIX/include -L$CONDA_PREFIX/lib && ./a.out\u000D"
            // "text": "clear;$HOME/GCC-15/bin/g++ -std=c++26 main.cpp -static-libstdc++  && ./a.out\u000D"
          }
        }
      ]
    },
    {
      "command": "cpp release",
      "sequence": [
        {
          "command": "workbench.action.terminal.sendSequence",
          "args": {
            "text": "clear;g++ -std=c++23 -O3 -DNDEBUG main.cpp -static-libstdc++ -I$CONDA_PREFIX/include -L$CONDA_PREFIX/lib -Lvaria/build/src -Ivaria/include -Ijson/include && time ./a.out\u000D\u000D"
          }
        }
      ]
    }
  ],
  "C_Cpp.errorSquiggles": "disabled",
  "files.associations": {
    "*.json": "json",
    "*.v": "verilog",
    "iostream": "cpp",
    "ostream": "cpp",
    "tuple": "cpp",
    "string": "cpp",
    "filesystem": "cpp",
    "iosfwd": "cpp",
    "*.ipp": "cpp",
    "optional": "cpp",
    "ratio": "cpp",
    "system_error": "cpp",
    "array": "cpp",
    "functional": "cpp",
    "type_traits": "cpp",
    "utility": "cpp",
    "variant": "cpp",
    "istream": "cpp",
    "__bit_reference": "cpp",
    "__functional_base": "cpp",
    "__node_handle": "cpp",
    "algorithm": "cpp",
    "bitset": "cpp",
    "chrono": "cpp",
    "deque": "cpp",
    "__memory": "cpp",
    "iterator": "cpp",
    "limits": "cpp",
    "locale": "cpp",
    "memory": "cpp",
    "random": "cpp",
    "vector": "cpp",
    "__split_buffer": "cpp",
    "list": "cpp",
    "*.tcc": "cpp",
    "cctype": "cpp",
    "cmath": "cpp",
    "cstdarg": "cpp",
    "cstddef": "cpp",
    "cstdio": "cpp",
    "cstdlib": "cpp",
    "cstring": "cpp",
    "ctime": "cpp",
    "cwchar": "cpp",
    "cwctype": "cpp",
    "atomic": "cpp",
    "bit": "cpp",
    "compare": "cpp",
    "complex": "cpp",
    "concepts": "cpp",
    "cstdint": "cpp",
    "map": "cpp",
    "set": "cpp",
    "unordered_map": "cpp",
    "unordered_set": "cpp",
    "exception": "cpp",
    "memory_resource": "cpp",
    "numeric": "cpp",
    "string_view": "cpp",
    "fstream": "cpp",
    "initializer_list": "cpp",
    "iomanip": "cpp",
    "mutex": "cpp",
    "new": "cpp",
    "sstream": "cpp",
    "stdexcept": "cpp",
    "stop_token": "cpp",
    "streambuf": "cpp",
    "thread": "cpp",
    "cinttypes": "cpp",
    "typeinfo": "cpp",
    "__nullptr": "cpp",
    "ranges": "cpp",
    "any": "cpp",
    "charconv": "cpp",
    "clocale": "cpp",
    "regex": "cpp",
    "format": "cpp",
    "numbers": "cpp",
    "span": "cpp",
    "text_encoding": "cpp",
    "cassert": "cpp",
    "strstream": "cpp",
    "cfenv": "cpp",
    "condition_variable": "cpp",
    "csignal": "cpp",
    "source_location": "cpp",
    "semaphore": "cpp",
    "shared_mutex": "cpp",
    "typeindex": "cpp",
    "print": "cpp",
    "forward_list": "cpp",
    "future": "cpp",
    "valarray": "cpp"
  },
}